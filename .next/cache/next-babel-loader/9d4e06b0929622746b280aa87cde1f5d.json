{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dominic/Documents/code/Portfolio/GA-final-project-front-end/components/Header/Header.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/headerStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function Header(props) {\n  var _classNames;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobileOpen = _React$useState2[0],\n      setMobileOpen = _React$useState2[1];\n\n  var classes = useStyles();\n  React.useEffect(function () {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var headerColorChange = function headerColorChange() {\n    var color = props.color,\n        changeColorOnScroll = props.changeColorOnScroll;\n    var windowsScrollTop = window.pageYOffset;\n\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n\n  var color = props.color,\n      links = props.links,\n      brand = props.brand,\n      fixed = props.fixed,\n      absolute = props.absolute;\n  var appBarClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.appBar, true), _defineProperty(_classNames, classes[color], color), _defineProperty(_classNames, classes.absolute, absolute), _defineProperty(_classNames, classes.fixed, fixed), _classNames));\n  return __jsx(AppBar, {\n    className: appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, brand))), __jsx(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    className: classes.hidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.collapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, links)), __jsx(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })))), __jsx(Hidden, {\n    mdUp: true,\n    implementation: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: mobileOpen,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    className: classes.closeButtonDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: classes.appResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, links))));\n}\nHeader.defaultProp = {\n  color: \"white\"\n};\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]),\n  links: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]).isRequired\n  })\n};","map":{"version":3,"sources":["/Users/dominic/Documents/code/Portfolio/GA-final-project-front-end/components/Header/Header.js"],"names":["React","Link","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Menu","Close","styles","useStyles","Header","props","useState","mobileOpen","setMobileOpen","classes","useEffect","changeColorOnScroll","window","addEventListener","headerColorChange","cleanup","removeEventListener","handleDrawerToggle","color","windowsScrollTop","pageYOffset","height","document","body","getElementsByTagName","classList","remove","add","links","brand","fixed","absolute","appBarClasses","appBar","container","title","hidden","collapse","paper","drawerPaper","closeButtonDrawer","appResponsive","defaultProp","propTypes","oneOf","node","string","bool","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const classes = useStyles();\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const headerColorChange = () => {\n    const { color, changeColorOnScroll } = props;\n\n    const windowsScrollTop = window.pageYOffset;\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n  const { color, links, brand, fixed, absolute } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n  return (\n    <AppBar className={appBarClasses}>\n      <Toolbar className={classes.container}>\n        <Button className={classes.title}>\n          <Link href=\"/presentation\">\n            <a>{brand}</a>\n          </Link>\n        </Button>\n        <Hidden smDown implementation=\"css\" className={classes.hidden}>\n          <div className={classes.collapse}>{links}</div>\n        </Hidden>\n        <Hidden mdUp>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <Hidden mdUp implementation=\"js\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={\"right\"}\n          open={mobileOpen}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          onClose={handleDrawerToggle}\n        >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n            className={classes.closeButtonDrawer}\n          >\n            <Close />\n          </IconButton>\n          <div className={classes.appResponsive}>{links}</div>\n        </Drawer>\n      </Hidden>\n    </AppBar>\n  );\n}\n\nHeader.defaultProp = {\n  color: \"white\"\n};\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"transparent\",\n    \"white\",\n    \"rose\",\n    \"dark\"\n  ]),\n  links: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"danger\",\n      \"transparent\",\n      \"white\",\n      \"rose\",\n      \"dark\"\n    ]).isRequired\n  })\n};\n"]},"metadata":{},"sourceType":"module"}